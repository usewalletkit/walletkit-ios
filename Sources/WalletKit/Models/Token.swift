//
// Token.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Token: Codable, JSONEncodable, Hashable {

    public var uuid: String
    public var network: Network
    public var contractAddress: String
    public var name: String
    public var symbol: String
    public var decimals: Int
    public var displayDecimals: Int
    public var logoUrl: String?

    public init(uuid: String, network: Network, contractAddress: String, name: String, symbol: String, decimals: Int, displayDecimals: Int, logoUrl: String? = nil) {
        self.uuid = uuid
        self.network = network
        self.contractAddress = contractAddress
        self.name = name
        self.symbol = symbol
        self.decimals = decimals
        self.displayDecimals = displayDecimals
        self.logoUrl = logoUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uuid
        case network
        case contractAddress = "contract_address"
        case name
        case symbol
        case decimals
        case displayDecimals = "display_decimals"
        case logoUrl = "logo_url"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(uuid, forKey: .uuid)
        try container.encode(network, forKey: .network)
        try container.encode(contractAddress, forKey: .contractAddress)
        try container.encode(name, forKey: .name)
        try container.encode(symbol, forKey: .symbol)
        try container.encode(decimals, forKey: .decimals)
        try container.encode(displayDecimals, forKey: .displayDecimals)
        try container.encodeIfPresent(logoUrl, forKey: .logoUrl)
    }
}

